"use strict";(self.webpackChunkrill_flow_github_io=self.webpackChunkrill_flow_github_io||[]).push([[6094],{4114:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>u,contentTitle:()=>r,default:()=>a,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var o=i(5893),t=i(1151);const s={sidebar_position:1},r="Executing Workflows",c={id:"user-guide/execution/execute",title:"Executing Workflows",description:"Introduction",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/user-guide/04-execution/01-execute.md",sourceDirName:"user-guide/04-execution",slug:"/user-guide/execution/execute",permalink:"/en/docs/user-guide/execution/execute",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/rill-flow/en",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\u6d41\u7a0b\u6267\u884c",permalink:"/en/docs/category/\u6d41\u7a0b\u6267\u884c"},next:{title:"Triggers",permalink:"/en/docs/user-guide/execution/trigger"}},u={},l=[{value:"Introduction",id:"introduction",level:2},{value:"\u63a5\u53e3\u4f7f\u7528",id:"\u63a5\u53e3\u4f7f\u7528",level:2},{value:"\u89e6\u53d1\u5668\u529f\u80fd",id:"\u89e6\u53d1\u5668\u529f\u80fd",level:2},{value:"Backend Submission",id:"backend-submission",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"executing-workflows",children:"Executing Workflows"}),"\n",(0,o.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsxs)(n.p,{children:["Once you have created a workflow in Rill Flow, you will receive a ",(0,o.jsx)(n.code,{children:"descriptorid"}),", composed of three parts: business ID (businessId), DAG graph ID (featureId), and DAG graph alias (alias). With this ",(0,o.jsx)(n.code,{children:"descriptorid"}),", you can submit your workflow.With this ",(0,o.jsx)(n.code,{children:"descriptorid"})," you can submit the workflow."]}),"\n",(0,o.jsxs)(n.p,{children:["Workflow implementation in Rill Flow is asynchronous.In Rill Flow, the execution of workflows is asynchronous. The system assigns an ",(0,o.jsx)(n.code,{children:"execution_id"})," to each running workflow, allowing users to track the workflow's running status and obtain results upon completion."]}),"\n",(0,o.jsx)(n.h2,{id:"\u63a5\u53e3\u4f7f\u7528",children:"\u63a5\u53e3\u4f7f\u7528"}),"\n",(0,o.jsxs)(n.p,{children:["Submit a workflow task using the ",(0,o.jsx)(n.a,{href:"/en/docs/user-guide/api#executing-a-workflow",children:"/flow/submit.json"})," interface."]}),"\n",(0,o.jsx)(n.h2,{id:"\u89e6\u53d1\u5668\u529f\u80fd",children:"\u89e6\u53d1\u5668\u529f\u80fd"}),"\n",(0,o.jsx)(n.p,{children:"Rill Flow abstracts the triggering logic of workflows, supporting various methods like scheduled tasks and message queue triggers."}),"\n",(0,o.jsx)(n.h2,{id:"backend-submission",children:"Backend Submission"}),"\n",(0,o.jsx)(n.p,{children:"See[\u6267\u884c\u7ba1\u7406](../06-background/03-execution.md# for more details)."})]})}function a(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>r});var o=i(7294);const t={},s=o.createContext(t);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);