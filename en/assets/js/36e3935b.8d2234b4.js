"use strict";(self.webpackChunkrill_flow_github_io=self.webpackChunkrill_flow_github_io||[]).push([[5466],{3877:(e,l,r)=>{r.r(l),r.d(l,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var n=r(5893),i=r(1151);const t={sidebar_position:2},s="Deployment Instructions",o={id:"user-guide/deploy",title:"Deployment Instructions",description:"Rill Flow is a distributed process orchestration and task scheduling execution framework, supporting both standalone and cluster deployments.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/user-guide/02-deploy.md",sourceDirName:"user-guide",slug:"/user-guide/deploy",permalink:"/en/docs/user-guide/deploy",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/rill-flow/en",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Architecture Introduction",permalink:"/en/docs/user-guide/arch"},next:{title:"\u6d41\u7a0b\u5b9a\u4e49",permalink:"/en/docs/category/\u6d41\u7a0b\u5b9a\u4e49"}},d={},c=[{value:"Standalone Deployment",id:"standalone-deployment",level:2},{value:"Kubernetes Deployment",id:"kubernetes-deployment",level:2},{value:"Installing Helm",id:"installing-helm",level:3},{value:"Deploying Rill Flow",id:"deploying-rill-flow",level:3},{value:"Docker Deployment",id:"docker-deployment",level:2}];function a(e){const l={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(l.h1,{id:"deployment-instructions",children:"Deployment Instructions"}),"\n",(0,n.jsx)(l.p,{children:"Rill Flow is a distributed process orchestration and task scheduling execution framework, supporting both standalone and cluster deployments."}),"\n",(0,n.jsx)(l.h2,{id:"standalone-deployment",children:"Standalone Deployment"}),"\n",(0,n.jsxs)(l.p,{children:["Rill Flow can be deployed on a single machine, suitable for development, testing, and debugging scenarios. For specific deployment methods, refer to the ",(0,n.jsx)(l.a,{href:"/en/docs/getting-started/quickstart",children:"QuickStart Document"}),". referring to the ",(0,n.jsx)(l.a,{href:"https://helm.sh/zh/docs/intro/install/",children:"Helm Installation Guide"}),".For a specific way to deploy a single machine, refer to",(0,n.jsx)(l.a,{href:"/en/docs/getting-started/quickstart",children:"\u5feb\u901f\u5f00\u59cb\u6587\u6863"}),"."]}),"\n",(0,n.jsx)(l.h2,{id:"kubernetes-deployment",children:"Kubernetes Deployment"}),"\n",(0,n.jsx)(l.h3,{id:"installing-helm",children:"Installing Helm"}),"\n",(0,n.jsx)(l.p,{children:"Developers can choose the appropriate installation method for Helm based on their actual environment by"}),"\n",(0,n.jsx)(l.h3,{id:"deploying-rill-flow",children:"Deploying Rill Flow"}),"\n",(0,n.jsx)(l.p,{children:"Deploy Rill Flow to a Kubernetes cluster with a single Helm command:"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-shell",children:"help repo add rill-flow https://rill-flow.github.io/rill-flow-helm-chart\nhelp upgrade --install rill-flow-flow/rill-flow--n=rill-flow-create-namespace\n"})}),"\n",(0,n.jsx)(l.p,{children:"View Rill Flow's deployment, please execute the following command\uff1a"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-shell",children:"kubtl get pod -n=rill-flow\n"})}),"\n",(0,n.jsx)(l.p,{children:"Below is expected output\uff1a"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-txt",children:"NAME READY STATUS RESTARTS AGE\nrill-flow-56b6f8ccbd-gml5n 1/1 Running 0 10m\nrill-flow-cassandra-0 1/1 Running 0 9m55 s\nrill-flow-jaeger-df446445-89wsh 1/1 Running 0 10m\nrill-flow-redis-master-0 1/1 Running 0 10m\nrill-flow-ui-858bffb6c5-enr2n 1/1 Running 0 10m\n"})}),"\n",(0,n.jsx)(l.p,{children:"If your actual output matches the expected output, indicate that Rill Flow is deployed successfully on the Kubernetes cluster."}),"\n",(0,n.jsx)(l.p,{children:"The above deployment will be enabled by default to start redish and trace, which will be used to develop test environments where redish and trace services are recommended. You can modify the start parameter to turn off redisch and trace components startup and replace with online redish and trace service address\uff1a"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-shell",children:"helm upgrade --install rill-flow rill-flow/rill-flow -n=rill-flow --create-namespace \\\n--set redis.enabled=false \\\n--set rillFlow.backend.env.rillFlowDescriptorRedisHost=${redis_host} \\\n--set rillFlow.backend.env.rillFlowDescriptorRedisPort=${redis_port} \\\n--set rillFlow.backend.env.rillFlowDefaultRedisHost=${redis_host} \\\n--set rillFlow.backend.env.rillFlowDefaultRedisPort=${redis_port} \\\n--set jaeger.enabled=false \\\n--set rillFlow.backend.env.rillFlowTraceEndpoint=${jaeger_endpoint} \\\n--set rillFlow.backend.env.rillFlowTraceQueryHost=${jaeger_query_server}\n"})}),"\n",(0,n.jsx)(l.p,{children:"Note:"}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"${redis_host}"})," and ",(0,n.jsx)(l.code,{children:"${redis_port}"})," are the IP and port of the production environment Redis."]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"${jaeger_endpoint}"})," is the Jaeger collector address."]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"${jaeger_query_server}"}),"\u5206\u522b\u4e3aJaeger\u67e5\u8be2\u670d\u52a1\u5730\u5740"]}),"\n"]}),"\n",(0,n.jsx)(l.p,{children:"help deploy Rill Flow's commonly used parameters below\uff1a"}),"\n",(0,n.jsxs)(l.table,{children:[(0,n.jsx)(l.thead,{children:(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.th,{children:"Parameter Name"}),(0,n.jsx)(l.th,{children:"Default value"}),(0,n.jsx)(l.th,{children:"Description"})]})}),(0,n.jsxs)(l.tbody,{children:[(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{children:"rillFlow.backend.env.rillFlowDescriptorRedishost"}),(0,n.jsx)(l.td,{children:"rill-flow-redis-master (k8s service address for redisarmed)"}),(0,n.jsx)(l.td,{children:"Resis address to store flow chart (DAG) information"})]}),(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{children:"rillFlow.backend.env. rillFlowDescriptorRedisPort"}),(0,n.jsx)(l.td,{children:"6379"}),(0,n.jsx)(l.td,{children:"redisport to store flow chart (DAG) information"})]}),(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{children:"rillFlow.backend.env.rillFlowDefaultRedisHost"}),(0,n.jsx)(l.td,{children:"rill-flow-redis-master (k8s service address for redisarmed)"}),(0,n.jsx)(l.td,{children:"Redisaddress address to store Rill Flow other information"})]}),(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{children:"rillFlow.backend.env.rillFlowDefaultRedPort"}),(0,n.jsx)(l.td,{children:"6379"}),(0,n.jsx)(l.td,{children:"Redisport to store Rill Flow other information"})]}),(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{children:"rillFlow.backend.env.rillFlowTraceEndpoint"}),(0,n.jsxs)(l.td,{children:[(0,n.jsx)(l.a,{href:"http://rill-flow-jaeger-collector:4317",children:"http://rill-flow-jaeger-collector:4317"})," (k8s service address for jaeger collector component)"]}),(0,n.jsx)(l.td,{children:"Trace Data Acquisition Service Address"})]}),(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{children:"rillFlow.backend.env.rillFlowTraceQueryPost"}),(0,n.jsxs)(l.td,{children:[(0,n.jsx)(l.a,{href:"http://rill-flow-jaeger-query:16686",children:"http://rill-flow-jaeger-query:16686"})," (k8s service address for jaeger query)"]}),(0,n.jsx)(l.td,{children:"Query service address for front-end page"})]}),(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{children:"rillFlow.ui.backendServer"}),(0,n.jsxs)(l.td,{children:[(0,n.jsx)(l.a,{href:"http://rill-flow-service:8080",children:"http://rill-flow-service:8080"})," (k8s service address for the Rill Flow backend)"]}),(0,n.jsx)(l.td,{children:"Rill Flow backend service address for front-end calls"})]}),(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{children:"redis.enable"}),(0,n.jsx)(l.td,{children:"true"}),(0,n.jsx)(l.td,{children:"Whether to deploy the Rill Flow service to start redis"})]}),(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{children:"redis.auth.enabled"}),(0,n.jsx)(l.td,{children:"false"}),(0,n.jsx)(l.td,{children:"Whether password authentication is enabled on redis."})]}),(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{children:"jaeger.enabled"}),(0,n.jsx)(l.td,{children:"true"}),(0,n.jsx)(l.td,{children:"Whether to deploy Rill Flow to start jaeger component"})]})]})]}),"\n",(0,n.jsxs)(l.p,{children:["See for more information on parameters (",(0,n.jsx)(l.a,{href:"https://github.com/rill-flow/rill-flow-help-chart/lob/main/charts/rill-flow/values.yaml",children:"value.yaml"}),")"]}),"\n",(0,n.jsx)(l.h2,{id:"docker-deployment",children:"Docker Deployment"}),"\n",(0,n.jsx)(l.p,{children:"In the production environment, if there is a formal Redis and Jaeger service, reference is made to the following commands to change the online address\uff1a by modifying the environment variable"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-shell",children:"docker run -d --name rill-flow -p 8080:8080 -e rill_flow_descriptor_redis_host=${redis_ip} -e rill_flow_descriptor_redis_port=${redis_port} -e rill_flow_default_redis_host=${redis_ip} -e rill_flow_default_redis_port=${redis_port} -e rill_flow_trace_query_host=${trace_server} -e rill_flow_callback_url=${callback_url}  weibocom/rill-flow:latest  && \\\ndocker run -d --name rill-flow-ui -p 8088:80 -e BACKEND_SERVER=${backend_server}  weibocom/rill-flow-ui:latest \n"})}),"\n",(0,n.jsx)(l.p,{children:"Note:"}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"${redis_ip}"})," and ",(0,n.jsx)(l.code,{children:"${redis_port}"})," are the IP and port of the production environment Redis."]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"${trace_server}"}),"\u4e3a\u751f\u4ea7\u73af\u5883Jaeger\u67e5\u8be2\u5730\u5740\u3002"]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"${backend_server}"}),"\u4e3aRill Flow\u751f\u4ea7\u73af\u5883\u7684\u540e\u7aef\u670d\u52a1\u5730\u5740"]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"${callback_url}"}),"\u4e3aRill Flow\u751f\u4ea7\u73af\u5883\u7684\u540e\u7aef\u670d\u52a1\u56de\u8c03\u5730\u5740"]}),"\n"]})]})}function h(e={}){const{wrapper:l}={...(0,i.a)(),...e.components};return l?(0,n.jsx)(l,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},1151:(e,l,r)=>{r.d(l,{Z:()=>o,a:()=>s});var n=r(7294);const i={},t=n.createContext(i);function s(e){const l=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function o(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(t.Provider,{value:l},e.children)}}}]);