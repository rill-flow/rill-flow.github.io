"use strict";(self.webpackChunkrill_flow_github_io=self.webpackChunkrill_flow_github_io||[]).push([[5814],{7756:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>n,metadata:()=>c,toc:()=>a});var r=t(5893),i=t(1151);const n={sidebar_position:2},d="Tasks and Dispatchers",c={id:"user-guide/defination/task-and-dispatcher",title:"Tasks and Dispatchers",description:"Task",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/user-guide/03-defination/02-task-and-dispatcher.md",sourceDirName:"user-guide/03-defination",slug:"/user-guide/defination/task-and-dispatcher",permalink:"/en/docs/user-guide/defination/task-and-dispatcher",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/rill-flow/en",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Workflow",permalink:"/en/docs/user-guide/defination/flow"},next:{title:"Executor",permalink:"/en/docs/user-guide/defination/executor"}},o={},a=[{value:"Task",id:"task",level:2},{value:"Task Attributes",id:"task-attributes",level:3},{value:"Category",id:"category",level:3},{value:"Pattern",id:"pattern",level:3},{value:"Retry",id:"retry",level:3},{value:"Synchronous and Asynchronous Task Modes",id:"synchronous-and-asynchronous-task-modes",level:2},{value:"Synchronous Mode (<code>task_sync</code>)",id:"synchronous-mode-task_sync",level:3},{value:"Asynchronous Mode (<code>task_async</code>)",id:"asynchronous-mode-task_async",level:3},{value:"Dispatcher",id:"dispatcher",level:2},{value:"Overview",id:"overview",level:3},{value:"resourceProtocol",id:"resourceprotocol",level:3},{value:"resourceName",id:"resourcename",level:3},{value:"Supported Dispatcher Types",id:"supported-dispatcher-types",level:4},{value:"HTTP protocol dispatcher",id:"http-protocol-dispatcher",level:4},{value:"Task Attributes",id:"task-attributes-1",level:5},{value:"Input Parameters",id:"input-parameters",level:5},{value:"Output Parameters",id:"output-parameters",level:5},{value:"ChatGPT Dispatcher",id:"chatgpt-dispatcher",level:4},{value:"Task Attributes",id:"task-attributes-2",level:5},{value:"Input Parameters",id:"input-parameters-1",level:5},{value:"Output Parameters",id:"output-parameters-1",level:5},{value:"Alibaba Cloud Model Service Dispatcher",id:"alibaba-cloud-model-service-dispatcher",level:4},{value:"Task Attributes",id:"task-attributes-3",level:5},{value:"Input Parameters",id:"input-parameters-2",level:5},{value:"Output Parameters",id:"output-parameters-2",level:5}];function l(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"tasks-and-dispatchers",children:"Tasks and Dispatchers"}),"\n",(0,r.jsx)(s.h2,{id:"task",children:"Task"}),"\n",(0,r.jsxs)(s.p,{children:["Task is for every node in DAG (with no loop map).A task represents each node in a Directed Acyclic Graph (DAG). In a distributed execution environment, tasks can be bound to dispatchers (Dispatchers) through the ",(0,r.jsx)(s.code,{children:"resourceName"})," attribute. The dispatcher is responsible for distributing task information to different executors (Executors)."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.img,{alt:"Task Architecture Diagram",src:t(6546).Z+"",width:"421",height:"346"})}),"\n",(0,r.jsx)(s.h3,{id:"task-attributes",children:"Task Attributes"}),"\n",(0,r.jsxs)(s.p,{children:["Task attributes are defined in the ",(0,r.jsx)(s.code,{children:"tasks"})," field of the DAG's YAML description file. These attributes include",":These"," attributes include\uff1a"]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Attribute Name"}),(0,r.jsx)(s.th,{children:"Required"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Name"}),(0,r.jsx)(s.td,{children:"Yes"}),(0,r.jsx)(s.td,{children:"String"}),(0,r.jsx)(s.td,{children:"Name of the task"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Category"}),(0,r.jsx)(s.td,{children:"Yes"}),(0,r.jsx)(s.td,{children:"String"}),(0,r.jsxs)(s.td,{children:["Task category, details at ",(0,r.jsx)(s.a,{href:"#category",children:"category"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Pattern"}),(0,r.jsx)(s.td,{children:"Yes"}),(0,r.jsx)(s.td,{children:"String"}),(0,r.jsxs)(s.td,{children:["Execution mode of the task, options are synchronous (",(0,r.jsx)(s.code,{children:"task_sync"}),") or asynchronous (",(0,r.jsx)(s.code,{children:"task_async"}),")"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"resourceProtocol"}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsx)(s.td,{children:"String"}),(0,r.jsxs)(s.td,{children:["Specifies the sender resource protocol or, if empty, the ",(0,r.jsx)(s.code,{children:"resourceName"})," protocol is parsed.",(0,r.jsx)(s.code,{children:"resourceProtocol"})," and ",(0,r.jsx)(s.code,{children:"resourceName"})," cannot be empty at the same time"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"resourceName"}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsx)(s.td,{children:"String"}),(0,r.jsxs)(s.td,{children:["Resource descriptor, see",(0,r.jsx)(s.a,{href:"#dispatcher",children:"\u6d3e\u53d1\u5668"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"next"}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsx)(s.td,{children:"String"}),(0,r.jsx)(s.td,{children:"Name of next task"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Key"}),(0,r.jsx)(s.td,{children:"Yes"}),(0,r.jsx)(s.td,{children:"map"}),(0,r.jsxs)(s.td,{children:["Enter mapping, see",(0,r.jsx)(s.a,{href:"context-and-mapping",children:"\u53c2\u6570\u6620\u5c04"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Parameter"}),(0,r.jsx)(s.td,{children:"Yes"}),(0,r.jsx)(s.td,{children:"map"}),(0,r.jsxs)(s.td,{children:["Default value for task types, if ",(0,r.jsx)(s.code,{children:"inputMapping"})," and ",(0,r.jsx)(s.code,{children:"parameters"})," are defined using ",(0,r.jsx)(s.code,{children:"inputMappings"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:["protocol from ",(0,r.jsx)(s.code,{children:"resourceName"}),". Can't be empty if ",(0,r.jsx)(s.code,{children:"resourceName"})," is also empty |\n| resourceName      | No       | string  | Resource descriptor, see ",(0,r.jsx)(s.a,{href:"#dispatcher",children:"Dispatcher"}),"                                                 |\n| next              | No       | string  | Name of the next task                                                                              |\n| inputMappings     | No       | map     | Input mappings, details at ",(0,r.jsx)(s.a,{href:"context-and-mapping",children:"parameter mapping"}),"                                |\n| parameters        | No       | map     | Default values for task input, ",(0,r.jsx)(s.code,{children:"inputMappings"})," takes precedence if the same key is defined in both |\n| outputMappings    | No       | map     | Output mappings, details at ",(0,r.jsx)(s.a,{href:"context-and-mapping",children:"parameter mapping"}),"                               |\n| tolerance         | No       | boolean | Whether to ignore failure and skip the current node                                                |\n| successConditions | No       | string  | Defines success conditions, takes precedence over ",(0,r.jsx)(s.code,{children:"result_type"}),", success if all conditions are met  |\n| failConditions    | No       | string  | Defines failure conditions, takes precedence over ",(0,r.jsx)(s.code,{children:"successConditions"}),", fails if all conditions are met |"]}),(0,r.jsx)(s.td,{children:"Yes"}),(0,r.jsx)(s.td,{children:"map"}),(0,r.jsxs)(s.td,{children:["Output mapping, see",(0,r.jsx)(s.a,{href:"context-and-mapping",children:"\u53c2\u6570\u6620\u5c04"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"olerance"}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsx)(s.td,{children:"boolean"}),(0,r.jsx)(s.td,{children:"Whether to ignore and continue when the task fails."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"lucess Conditions"}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsx)(s.td,{children:"String"}),(0,r.jsxs)(s.td,{children:["Defines the success condition, priority is higher than ",(0,r.jsx)(s.code,{children:"result_type"}),". The task is successful if the output satisfies all the conditions, otherwise failure"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"FailConditions"}),(0,r.jsx)(s.td,{children:"Yes"}),(0,r.jsx)(s.td,{children:"String"}),(0,r.jsxs)(s.td,{children:["Define failed condition, priority is higher than ",(0,r.jsx)(s.code,{children:"successConditions"}),". Task fails if output meets all conditions, otherwise success"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Retry"}),(0,r.jsx)(s.td,{children:"Yes"}),(0,r.jsx)(s.td,{children:"map"}),(0,r.jsxs)(s.td,{children:["For compute classes, if execution fails, Rill Flow will try again according to the strategy configured by this option, see",(0,r.jsx)(s.a,{href:"#retry",children:"retry"})]})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"category",children:"Category"}),"\n",(0,r.jsx)(s.p,{children:"Tasks are categorized as follows:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Computational Tasks"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"function"}),": Executes specific computational tasks, such as HTTP or RPC call tasks."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Flow Control Tasks"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"choice"}),": Chooses one task to execute from multiple sub-tasks."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"foreach"}),": Repeatedly executes a set of sub-tasks."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"pass"}),": A null task that is marked successful upon execution."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"return"}),": Decides whether to skip subsequent tasks based on conditions.\nFor more information, refer to ",(0,r.jsx)(s.a,{href:"/en/docs/user-guide/defination/control",children:"Flow Control"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"pattern",children:"Pattern"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"pattern"})," attribute specifies the mode of execution between the dispatcher and executor, supporting synchronous (",(0,r.jsx)(s.code,{children:"task_sync"}),") and asynchronous (",(0,r.jsx)(s.code,{children:"task_async"}),") modes."]}),"\n",(0,r.jsx)(s.h3,{id:"retry",children:"Retry"}),"\n",(0,r.jsx)(s.p,{children:"Retry strategy. There may be a failure of call for computing classes.This parameter sets a failed retry strategy, eg:\uff1a"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-yaml",children:"Retry:\n  maxRetryTimes:3\n  intervalInseconds:2\n  multipleier:1\n"})}),"\n",(0,r.jsx)(s.p,{children:"There are three options\uff1a in retry structure"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"maxRetryTimes\uff1amaximum retries with a default value of 0, i.e.\uff1adoes not retry."}),"\n",(0,r.jsx)(s.li,{children:"IntervalInSeconds\uff1aretries interval seconds, default value is 0, i.e.\uff1afails to retry."}),"\n",(0,r.jsx)(s.li,{children:"Multipler\uff1aretries to zoom at intervals, with a default value of 1, i.e.\uff1a."}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Rill Flow will try again with the strategy in the above configuration after computing failed tasks.Assume that n times have already been tried, the next retry will be between\uff1a",(0,r.jsx)(s.code,{children:"intervalInseconds*multipleer^n"}),", and at most maxRetryTimes times."]}),"\n",(0,r.jsx)(s.h2,{id:"synchronous-and-asynchronous-task-modes",children:"Synchronous and Asynchronous Task Modes"}),"\n",(0,r.jsxs)(s.h3,{id:"synchronous-mode-task_sync",children:["Synchronous Mode (",(0,r.jsx)(s.code,{children:"task_sync"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"In synchronous mode, the dispatcher maintains a connection with the executor until the task is completed or times out. This mode is suitable for tasks that take milliseconds to execute.This mode is suitable for quick tasks in milliseconds."}),"\n",(0,r.jsxs)(s.h3,{id:"asynchronous-mode-task_async",children:["Asynchronous Mode (",(0,r.jsx)(s.code,{children:"task_async"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["In asynchronous mode, the dispatcher includes a callback address ",(0,r.jsx)(s.code,{children:"X-Callback-Url"})," in the Header and passes the task information to the executor. After completing the task, the executor notifies Rill Flow of the results by calling the ",(0,r.jsx)(s.code,{children:"X-Callback-Url"}),". This mode is suitable for heavy computational tasks or tasks that take longer to complete, such as AIGC model generation tasks.Tasks select a dispatcher through the ",(0,r.jsx)(s.code,{children:"resourceProtocol"})," attribute. The same type of dispatcher can correspond to multiple executors. Tasks bind to dispatchers and executors through the ",(0,r.jsx)(s.code,{children:"resourceName"})," attribute. Rill Flow supports various dispatchers, including HTTP protocol dispatcher, K8s Service dispatcher, Alibaba Cloud Tongyi Qianwen dispatcher, ChatGPT dispatcher, etc. Rill Flow also supports extending dispatchers through ",(0,r.jsx)(s.a,{href:"/en/docs/develop/plugin/create-plugin",children:"plugins"}),", offering flexibility in implementing custom dispatchers.This mode is applicable to heavy computing or long time performing tasks, such as AIGC model generation tasks."]}),"\n",(0,r.jsx)(s.h2,{id:"dispatcher",children:"Dispatcher"}),"\n",(0,r.jsx)(s.h3,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(s.p,{children:["Tasks are selected via the ",(0,r.jsx)(s.code,{children:"resourceProtocol"})," attribute.The same type of distributor can correspond to multiple executors.Tasks are bound by the ",(0,r.jsx)(s.code,{children:"resourceName"})," property to assign and execute.Rill Flow supports a variety of dispatchers, such as HTTP protocol dispatchers, K8s Service dispatchers, Aliyun ChatGPT dispatchers, etc.Rill Flow also supports the extension of the dispatcher via",(0,r.jsx)(s.a,{href:"/en/docs/develop/plugin/create-plugin",children:"\u63d2\u4ef6"}),", providing flexibility to achieve a custom dispatcher."]}),"\n",(0,r.jsx)(s.h3,{id:"resourceprotocol",children:"resourceProtocol"}),"\n",(0,r.jsxs)(s.p,{children:["Tasks are assigned via ",(0,r.jsx)(s.code,{children:"resourceProtocol"}),".This is an optional field.Tasks specify a dispatcher using the ",(0,r.jsx)(s.code,{children:"resourceProtocol"})," attribute. This field is optional. If the task's ",(0,r.jsx)(s.code,{children:"resourceProtocol"})," is empty, the ",(0,r.jsx)(s.code,{children:"resourceProtocol"})," will be parsed from the ",(0,r.jsx)(s.code,{children:"resourceName"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"resourcename",children:"resourceName"}),"\n",(0,r.jsxs)(s.p,{children:["Tasks describe a dispatcher and executor using a simplified format of a Uniform Resource Locator (URL). The common format is",":Common"," format is\uff1a"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-txt",children:"[Protocol Type]://[Server Address]:[Port Number]/[Resource Hierarchy UNIX File Path][File Name]?[Query Parameters]#[Fragment ID]\n"})}),"\n",(0,r.jsx)(s.p,{children:"For example:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-txt",children:"http://www.sample.com/callback.json\n"})}),"\n",(0,r.jsx)(s.h4,{id:"supported-dispatcher-types",children:"Supported Dispatcher Types"}),"\n",(0,r.jsx)(s.p,{children:"Rill Flow supports the following types of dispatchers:"}),"\n",(0,r.jsx)(s.h4,{id:"http-protocol-dispatcher",children:"HTTP protocol dispatcher"}),"\n",(0,r.jsxs)(s.p,{children:["The HTTP dispatcher is used to forward task information. When initiating an HTTP request, it uses ",(0,r.jsx)(s.code,{children:"application-json"})," as the ",(0,r.jsx)(s.code,{children:"content-type"}),", and the received ",(0,r.jsx)(s.code,{children:"json"})," string is used as output."]}),"\n",(0,r.jsx)(s.h5,{id:"task-attributes-1",children:"Task Attributes"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Parameter"}),(0,r.jsx)(s.th,{children:"Value"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"resourceProtocol"}),(0,r.jsx)(s.td,{children:"http/https"}),(0,r.jsx)(s.td,{children:"Specifies the protocol type"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"resourceName"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"http://www.sample.com/execute.json",children:"http://www.sample.com/execute.json"})}),(0,r.jsx)(s.td,{children:"HTTP URL"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Pattern"}),(0,r.jsx)(s.td,{children:"task_sync/task_async"}),(0,r.jsxs)(s.td,{children:["Specifies the task execution mode, synchronous (",(0,r.jsx)(s.code,{children:"task_sync"}),") or asynchronous (",(0,r.jsx)(s.code,{children:"task_async"}),")"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"requestType"}),(0,r.jsx)(s.td,{children:"get/post"}),(0,r.jsx)(s.td,{children:"HTTP request type, default is post"})]})]})]}),"\n",(0,r.jsx)(s.h5,{id:"input-parameters",children:"Input Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Key"}),(0,r.jsx)(s.th,{children:"Value Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"query_params_*"}),(0,r.jsx)(s.td,{children:"map"}),(0,r.jsxs)(s.td,{children:["GET request parameters, keys with ",(0,r.jsx)(s.code,{children:"query_params_"})," prefix should be of map type, appended to the URL as key=value"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"request_header_*"}),(0,r.jsx)(s.td,{children:"map"}),(0,r.jsxs)(s.td,{children:["Request headers, keys with ",(0,r.jsx)(s.code,{children:"request_header_"})," prefix should be of map type, included in the request headers"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Other keys"}),(0,r.jsx)(s.td,{children:"String"}),(0,r.jsx)(s.td,{children:"POST request body parameters, currently only supports json type, other key/values will be included in the json structure of the post body"})]})]})]}),"\n",(0,r.jsx)(s.h5,{id:"output-parameters",children:"Output Parameters"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"json"})," structure returned by the HTTP request will be assigned to the ",(0,r.jsx)(s.code,{children:"$.output"})," variable."]}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:["Dispatching to K8s Service:\nIn a K8S environment, it's recommended to use the HTTP dispatcher to connect to a K8s Service domain, like ",(0,r.jsx)(s.code,{children:"http://service_name.namespace/execute.json"}),". For more details about Service, refer to ",(0,r.jsx)(s.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes Service"}),". You can also use service meshes like ",(0,r.jsx)(s.a,{href:"https://istio.io",children:"Istio"})," or other advanced service load balancing mechanisms.For more information on the Service, refer to [Kubernetes Service] (",(0,r.jsx)(s.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/).Also",children:"https://kubernetes.io/docs/concepts/services-networking/service/).Also"})," use a service grid such as ",(0,r.jsx)(s.a,{href:"https://istio.io",children:"Istio"})," or other advanced service load equilibrium mechanisms."]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"chatgpt-dispatcher",children:"ChatGPT Dispatcher"}),"\n",(0,r.jsxs)(s.p,{children:["Rill Flow supports the OpenAI ",(0,r.jsx)(s.a,{href:"https://openai.com/chatgpt",children:"ChatGPT model"})," dispatcher.Use this dispatcher to call Apikey with an OpenAI model.For specific information, please refer to [OpenAI ChatGPT model documents] (",(0,r.jsx)(s.a,{href:"https://platform.openai.com/api-keys",children:"https://platform.openai.com/api-keys"}),")"]}),"\n",(0,r.jsx)(s.h5,{id:"task-attributes-2",children:"Task Attributes"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Parameter"}),(0,r.jsx)(s.th,{children:"Value"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"resourceProtocol"}),(0,r.jsx)(s.td,{children:"chatgpt"}),(0,r.jsx)(s.td,{children:"Use ChatGPT dispatcher"})]})})]}),"\n",(0,r.jsx)(s.h5,{id:"input-parameters-1",children:"Input Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Key"}),(0,r.jsx)(s.th,{children:"Value Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"apikey"}),(0,r.jsx)(s.td,{children:"String"}),(0,r.jsx)(s.td,{children:"Apikey for model invocation"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Model"}),(0,r.jsx)(s.td,{children:"String"}),(0,r.jsxs)(s.td,{children:["Model name, see OpenAI",(0,r.jsx)(s.a,{href:"https://platform.openai.com/docs/models",children:"\u652f\u6301\u7684\u6a21\u578b\u5217\u8868"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Prop"}),(0,r.jsx)(s.td,{children:"String"}),(0,r.jsx)(s.td,{children:"Text content for model request"})]})]})]}),"\n",(0,r.jsx)(s.h5,{id:"output-parameters-1",children:"Output Parameters"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"json"})," structure that ChatGPT requests to return will be assigned to ",(0,r.jsx)(s.code,{children:".output.result"})," variables.Other return values can be found in [OpenAI SDK documents] (",(0,r.jsx)(s.a,{href:"https://platform.openai.com/docs/guides/text-generation/chat-completions-response-form",children:"https://platform.openai.com/docs/guides/text-generation/chat-completions-response-form"}),")."]}),"\n",(0,r.jsx)(s.h4,{id:"alibaba-cloud-model-service-dispatcher",children:"Alibaba Cloud Model Service Dispatcher"}),"\n",(0,r.jsxs)(s.p,{children:["Rill Flow supports the dispatcher for Alibaba Cloud's ",(0,r.jsx)(s.a,{href:"https://help.aliyun.com/zh/dashscope",children:"Lingji Model Service"}),". To use this dispatcher, an Apikey for Alibaba Cloud's Tongyi Qianwen model invocation is required. For more details, refer to the ",(0,r.jsx)(s.a,{href:"https://help.aliyun.com/zh/dashscope/developer-reference/activate-dashscope-and-create-an-api-key",children:"Alibaba Cloud Lingji Model Service Documentation"}),".Use this dispatcher to call Apikey with an Aliyun popular model.Specific information can be found in",(0,r.jsx)(s.a,{href:"https://help.aliyun.com/en/dashscreene/developer-reference/activate-dashscreene-and-create-an-api-key",children:"\u963f\u91cc\u4e91\u7075\u79ef\u6a21\u578b\u670d\u52a1\u6587\u6863"}),"."]}),"\n",(0,r.jsx)(s.h5,{id:"task-attributes-3",children:"Task Attributes"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Parameter"}),(0,r.jsx)(s.th,{children:"Value"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"resourceProtocol"}),(0,r.jsx)(s.td,{children:"aliyun_ai"}),(0,r.jsx)(s.td,{children:"Use Alibaba Cloud AI dispatcher"})]})})]}),"\n",(0,r.jsx)(s.h5,{id:"input-parameters-2",children:"Input Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Key"}),(0,r.jsx)(s.th,{children:"Value Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"apikey"}),(0,r.jsx)(s.td,{children:"String"}),(0,r.jsx)(s.td,{children:"Apikey for model invocation"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Model"}),(0,r.jsx)(s.td,{children:"String"}),(0,r.jsxs)(s.td,{children:["Model name, see ",(0,r.jsx)(s.a,{href:"https://help.aliyun.com/zh/dashscope/developer-reference/token-api",children:"Alibaba Cloud's Supported Model List"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Message"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"Text content for model request"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"message_suffix"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"(Optional) Suffix for the model request content"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"message_prefix"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"(Optional) Prefix for the model request content"})]})]})]}),"\n",(0,r.jsx)(s.h5,{id:"output-parameters-2",children:"Output Parameters"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"json"})," structure returned by the Alibaba Cloud request will be assigned to the ",(0,r.jsx)(s.code,{children:"$.output"})," variable, with ",(0,r.jsx)(s.code,{children:"$.output.output.text"})," being the text return from the model. Other return values can be referenced in the ",(0,r.jsx)(s.a,{href:"https://help.aliyun.com/zh/dashscope/developer-reference/token-api",children:"Alibaba Cloud SDK Documentation"}),".Specifies the dispatcher resource protocol, if null, uses"]})]})}function h(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},6546:(e,s,t)=>{t.d(s,{Z:()=>r});const r=t.p+"assets/images/task_arch-2396c29b31ad1792522c467062302d69.svg"},1151:(e,s,t)=>{t.d(s,{Z:()=>c,a:()=>d});var r=t(7294);const i={},n=r.createContext(i);function d(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);