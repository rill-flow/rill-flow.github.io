"use strict";(self.webpackChunkrill_flow_github_io=self.webpackChunkrill_flow_github_io||[]).push([[5564],{3343:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>o});var t=s(5893),r=s(1151);const i={sidebar_position:7},l="API Documentation",d={id:"user-guide/api",title:"API Documentation",description:"Key APIs",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/user-guide/07-api.md",sourceDirName:"user-guide",slug:"/user-guide/api",permalink:"/en/docs/user-guide/api",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/rill-flow/en",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Trigger Management",permalink:"/en/docs/user-guide/background/trigger"},next:{title:"\u6700\u4f73\u5b9e\u8df5",permalink:"/en/docs/category/\u6700\u4f73\u5b9e\u8df5"}},c={},o=[{value:"Key APIs",id:"key-apis",level:2},{value:"Create Workflow",id:"create-workflow",level:3},{value:"Execute Workflow",id:"execute-workflow",level:3},{value:"Task Completion Callback",id:"task-completion-callback",level:3},{value:"Get Workflow Execution Status",id:"get-workflow-execution-status",level:3},{value:"Other APIs",id:"other-apis",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"api-documentation",children:"API Documentation"}),"\n",(0,t.jsx)(n.h2,{id:"key-apis",children:"Key APIs"}),"\n",(0,t.jsx)(n.h3,{id:"create-workflow",children:"Create Workflow"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"URL"}),": /flow/bg/manage/descriptor/add_descriptor.json"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Method"}),": POST"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Request Parameter Description"})}),"\n"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter Name"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"business_id"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Workflow business ID"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"feature_name"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Workflow service name"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"alias"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Workflow alias"})]})]})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Request Body parameters"}),"\uff1aWorkflow yaml Definition"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Request Example"}),"\uff1a"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-curl",children:"curl --location --request POST ' http:///127.0.0.1:8080/flow/bg/manage/descriptor/add_descriptor. son?business_id=demoFlowTest &feature_name=demoFlowTest &alias=release' \\\n--header 'Content-Type: text/plain' \\\n--data-raw -\nversion: 20230829         \nworkspace: demoFlowTest    \ndagName: DemoTest         \ntype:                \ntasks:\n  - category: function     \n    name: startNode        \n    next: endNode         \n    resourceName: http://127. .0.1:8080/flow/sample/start_node. son  \n    pattern: task_sync     \n    inputMappings:         \n      - target: $. nput.right\n        source: $context.right\n      - target: $input. eft\n        source: $.context. eft\n    outputMappings:       \n      - target: $. ontext.result_number\n        source: $.output. esult_number\n  - category: function\n    name: endNode\n    resourceName: http://127. .0.1:8080/flow/sample/end_node.json\n    pattern: task_sync\n    inputMappings:\n      - target: $input. esult_number\n        source: $.context.result_number\n      - target: $. nput.expect_number\n        source: $.context.result_number\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Response"}),":"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-txt",children:'{\n    "ret": true, // true: Success, false: Failure\n    "descriptor_id": "" // Workflow ID\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"execute-workflow",children:"Execute Workflow"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"URL"}),": /flow/submit.json"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Method"}),": POST"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Request Parameter Description"})}),"\n"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter Name"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"descriptor_id"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Workflow ID"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"callback"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Callback URL upon completion"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"resource_check"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Resource check rule"})]})]})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Background information to request the Body parameter"}),"\uff1aworkflow"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Request Example"}),"\uff1a"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-curl",children:"curl -XPOST 'http://127.0.0.1:8080/2/flow/submit.json?descriptor_id=demoFlowTest:demoTest' -d '{\"left\": 512, \"right\": 512}' -H'Content-Type:application/json'\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Response"}),":"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-txt",children:'{\n    "execution_id": "" // Execution ID\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"task-completion-callback",children:"Task Completion Callback"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"URL"}),": /flow/finish.json"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Method"}),": POST"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Request Parameter Description"})}),"\n"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter Name"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Execution Id"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Execution ID"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"taskName"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Task name"})]})]})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Request an example of Body's parameter"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-txt",children:'{\n  "result_type": "SUCCESS", // Task execution result: SUCCESS or FAIL\n  ...\n  "response": { // Updated context for outputMappings\n    "xxx": "xxx"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Response"}),":"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-txt",children:'LO\n    "result": "ok" \n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"get-workflow-execution-status",children:"Get Workflow Execution Status"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"URL"}),": /flow/get.json"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Method"}),": GET"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Request Parameter Description"})}),"\n"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter Name"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"execution_id"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Workflow Execution ID"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"briefs"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"Whether to return brief info (true: only workflow status, false: workflow and node status)"})]})]})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Response"}),":"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-txt",children:'{\n    "ret": {\n        "execution_id": "", // Workflow execution ID\n        "dag_status": "RUNNING", // Workflow execution status\n        "process": 100, // Current progress of the workflow (100 indicates 100%)\n        "tasks": {  // When brief is true, tasks are not returned. Tasks are a map with node names as keys and node info as values\n            "startNode": {\n                "contains_sub": false, // Whether contains sub-nodes\n                "name": "startNode", // Node name\n                "next": ["endNode"], // Name of the next node\n                "status": "NOT_STARTED", // Node status\n                "task": {    \n                  "name": "startNode",\n                  "next": "endNode",\n                  "resourceName": "http://127.0.0.1:8080/flow/sample/start_node.json", \n                  "pattern": "task_sync", \n                  "inputMappings": [  // Input mapping rules\n                    ...\n                  ],\n                  "outputMappings": [  // Output mapping rules\n                    ...\n                  ]\n                }\n            },\n            "endNode": {\n                ...\n            }\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"other-apis",children:"Other APIs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Project integrated into",(0,t.jsx)(n.a,{href:"https://swagger.io/",children:"Swagger2"})," framework, full interface description can be accessed at the following address after service starts"]}),"\uff1a"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-txt",children:"http:///127.0.0.1:8080/swagger-ui.html\n"})}),"\n",(0,t.jsx)(n.p,{children:"Effect like Found\uff1a"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"SWAGGER",src:s(1308).Z+"",width:"2050",height:"998"})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},1308:(e,n,s)=>{s.d(n,{Z:()=>t});const t=s.p+"assets/images/swagger-de21d48a14c9457c48c7753b7a89fe43.jpg"},1151:(e,n,s)=>{s.d(n,{Z:()=>d,a:()=>l});var t=s(7294);const r={},i=t.createContext(r);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);