"use strict";(self.webpackChunkrill_flow_github_io=self.webpackChunkrill_flow_github_io||[]).push([[9814],{6739:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=i(5893),t=i(1151);const o={sidebar_position:2},l="Create Plugin",a={id:"develop/plugin/create-plugin",title:"Create Plugin",description:"Dependencies",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/develop/01-plugin/02-create-plugin.md",sourceDirName:"develop/01-plugin",slug:"/develop/plugin/create-plugin",permalink:"/en/docs/develop/plugin/create-plugin",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/rill-flow/en",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/en/docs/develop/plugin/intro"},next:{title:"Extended Points",permalink:"/en/docs/develop/plugin/extension"}},s={},c=[{value:"Dependencies",id:"dependencies",level:2},{value:"code",id:"code",level:2},{value:"Pack and run",id:"pack-and-run",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"create-plugin",children:"Create Plugin"}),"\n",(0,r.jsx)(e.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,r.jsx)(e.p,{children:"Rill Flow plugins must be written in Java because Rill Flow are running under jdk 17 version."}),"\n",(0,r.jsxs)(e.p,{children:["In the Rill Flow project, the rill-flow-plugins module contains examples of module development, you can use the code of the submodule in the rill-flow-plugins module to start your plugin development trip, and you can also refer to the Open Source Project Code and Example\uff1a",(0,r.jsx)(e.a,{href:"https://github.com/pf4j/Pf4j/pf4j",children:"PF4J"}),"."]}),"\n",(0,r.jsx)(e.p,{children:"First, you need to add dependencies to your plugin item:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-xml",children:"<dependency>\n  <groupId>com.weibo.api.video.task</groupId>\n  <artifactId>rill-flow-interfaces</artifactId>\n</dependency>\n"})}),"\n",(0,r.jsx)(e.h2,{id:"code",children:"code"}),"\n",(0,r.jsx)(e.p,{children:"Then create a plugin class in the plugin project, and implement Dispatcher Extensionary Interface\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'import org.pf4j.Extension;\nimport com.rill.flow.interfaces.dispatcher.DispatcherExtension;\n\n@Extension\npublic class UserDefineDispatcherExtension implements DispatcherExtension {\n    @Override\n    public String handle(Resource resource, DispatchInfo dispatchInfo) {\n        return null;\n    }\n  \n  \t@Override\n    public String getName() {\n        return "user_define";\n    }\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"pack-and-run",children:"Pack and run"}),"\n",(0,r.jsx)(e.p,{children:"According to PF4J protocol, create a META-INF directory in the resources of the plugin, and fill out the basic contents of the plugin in the MANIFEST.MF such as:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Manifest-Version: 1.0\nArchiver-Version: Plexus Archiver\nCreated-By: Apache Maven\nBuilt-By: decebal\nBuild-Jdk: 17.0.8\nPlugin-Id: user-plugin\nPlugin-Provider: rill-flow\nPlugin-Version: 0.0.1\n"})}),"\n",(0,r.jsx)(e.p,{children:"Add building information\uff1a in pom.xml"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-xml",children:"<build>\n  <finalName>user-plugin</finalName>\n  <plugins>\n    <plugin>\n      <groupId>org.apache.maven.plugins</groupId>\n      <artifactId>maven-assembly-plugin</artifactId>\n      <version>3.1.0</version>\n      <configuration>\n        <descriptorRefs>\n          <descriptorRef>jar-with-dependencies</descriptorRef>\n        </descriptorRefs>\n        <finalName>${project.artifactId}-${project.version}-all</finalName>\n        <appendAssemblyId>false</appendAssemblyId>\n        <attach>false</attach>\n        <archive>\n          <manifest>\n            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n          </manifest>\n          <manifestEntries>\n            <Plugin-Id>aliyun-ai-plugin</Plugin-Id>\n            <Plugin-Version>1.0</Plugin-Version>\n            <Plugin-Provider>rill-flow</Plugin-Provider>\n          </manifestEntries>\n        </archive>\n      </configuration>\n      <executions>\n        <execution>\n          <id>make-assembly</id>\n          <phase>package</phase>\n          <goals>\n            <goal>single</goal>\n          </goals>\n        </execution>\n      </executions>\n    </plugin>\n    <plugin>\n      <groupId>org.apache.maven.plugins</groupId>\n      <artifactId>maven-deploy-plugin</artifactId>\n      <configuration>\n        <skip>true</skip>\n      </configuration>\n      <version>2.8.2</version>\n    </plugin>\n    <plugin>\n      <groupId>org.apache.maven.plugins</groupId>\n      <artifactId>maven-compiler-plugin</artifactId>\n      <version>2.5.1</version>\n      <configuration>\n        <annotationProcessors>\n          <annotationProcessor>org.pf4j.processor.ExtensionAnnotationProcessor</annotationProcessor>\n        </annotationProcessors>\n      </configuration>\n    </plugin>\n  </plugins>\n</build>\n"})}),"\n",(0,r.jsx)(e.p,{children:"If you place plugin items as modules in rill-flow-plugins, run quick-start will automatically pack and place plugin jar packages in the docker."}),"\n",(0,r.jsxs)(e.p,{children:["If you need to pack manually, you will get user-plugin-xxx-all.jar. You should place the jar package with a name ending in -all.jar to path ",(0,r.jsx)(e.code,{children:"/usr/local/rill_flow/plugins"})," inside the container before it starts."]})]})}function u(n={}){const{wrapper:e}={...(0,t.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},1151:(n,e,i)=>{i.d(e,{Z:()=>a,a:()=>l});var r=i(7294);const t={},o=r.createContext(t);function l(n){const e=r.useContext(o);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),r.createElement(o.Provider,{value:e},n.children)}}}]);