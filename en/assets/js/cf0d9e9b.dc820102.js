"use strict";(self.webpackChunkrill_flow_github_io=self.webpackChunkrill_flow_github_io||[]).push([[6606],{3373:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>n,metadata:()=>d,toc:()=>c});var i=t(5893),s=t(1151);const n={sidebar_position:2},a="Triggers",d={id:"user-guide/execution/trigger",title:"Triggers",description:"Overview",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/user-guide/04-execution/02-trigger.md",sourceDirName:"user-guide/04-execution",slug:"/user-guide/execution/trigger",permalink:"/en/docs/user-guide/execution/trigger",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/rill-flow/en",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Executing Workflows",permalink:"/en/docs/user-guide/execution/execute"},next:{title:"Execution Status",permalink:"/en/docs/user-guide/execution/status"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Create Trigger Task",id:"create-trigger-task",level:2},{value:"URI",id:"uri",level:3},{value:"Call Method",id:"call-method",level:3},{value:"Parameter",id:"parameter",level:3},{value:"Cancel Trigger Task",id:"cancel-trigger-task",level:2},{value:"URI",id:"uri-1",level:3},{value:"Call Method",id:"call-method-1",level:3},{value:"Parameter",id:"parameter-1",level:3},{value:"Query trigger task list",id:"query-trigger-task-list",level:2},{value:"URI",id:"uri-2",level:3},{value:"Call Method",id:"call-method-2",level:3},{value:"Parameter",id:"parameter-2",level:3},{value:"Returns parameter",id:"returns-parameter",level:3},{value:"Create scheduled trigger task",id:"create-scheduled-trigger-task",level:2},{value:"Canceling Scheduled Trigger Tasks",id:"canceling-scheduled-trigger-tasks",level:4},{value:"Create kafka Trigger Task",id:"create-kafka-trigger-task",level:2},{value:"kafka Trigger Task Execution",id:"kafka-trigger-task-execution",level:2}];function o(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"triggers",children:"Triggers"}),"\n",(0,i.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(r.p,{children:["Triggers are tools used to facilitate the execution of DAG graphs in response to external events, thereby submitting workflows. For basic information on submitting workflows, refer to: ",(0,i.jsx)(r.a,{href:"/en/docs/user-guide/execution/execute",children:"Executing Workflows"}),".For basic information about submitting workflows, refer to\uff1a",(0,i.jsx)(r.a,{href:"/en/docs/user-guide/execution/execute",children:"\u63d0\u4ea4\u5de5\u4f5c\u6d41"}),"."]}),"\n",(0,i.jsx)(r.p,{children:"Rill Flow supports the following types of triggers:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Scheduled Triggers: For automatically submitting workflows at planned times."}),"\n",(0,i.jsx)(r.li,{children:"Kafka Message Triggers: Trigger workflow execution by sending messages to a specified Kafka topic."}),"\n"]}),"\n",(0,i.jsx)(r.h1,{id:"trigger-task-maintenance-interface",children:"Trigger Task Maintenance Interface"}),"\n",(0,i.jsx)(r.p,{children:"Rill Flow provides a common interface to create, delete, and maintain triggers tasks."}),"\n",(0,i.jsx)(r.h2,{id:"create-trigger-task",children:"Create Trigger Task"}),"\n",(0,i.jsx)(r.p,{children:"A trigger task to create a trigger of the specified type of trigger."}),"\n",(0,i.jsx)(r.h3,{id:"uri",children:"URI"}),"\n",(0,i.jsx)(r.p,{children:"/flow/rigger/add_trigger.json"}),"\n",(0,i.jsx)(r.h3,{id:"call-method",children:"Call Method"}),"\n",(0,i.jsx)(r.p,{children:"POST"}),"\n",(0,i.jsx)(r.h3,{id:"parameter",children:"Parameter"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Get Parameters"}),"\n"]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Parameter Name"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Required"}),(0,i.jsx)(r.th,{children:"Parameter Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Type"}),(0,i.jsx)(r.td,{children:"String"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Trigger type, extracted value is kafka (kafka message trigger) or cron (scheduled trigger)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"descriptor_id"}),(0,i.jsx)(r.td,{children:"String"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsxs)(r.td,{children:["DAG graph id for triggering the current trigger, reference\uff1a",(0,i.jsx)(r.a,{href:"/en/docs/user-guide/execution/execute",children:"\u6267\u884c\u5de5\u4f5c\u6d41"})]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"callback"}),(0,i.jsx)(r.td,{children:"String"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsxs)(r.td,{children:["Optional parameters to define notification tasks after workflow implementation, see\uff1a",(0,i.jsx)(r.a,{href:"/en/docs/user-guide/execution/execute",children:"\u6267\u884c\u5de5\u4f5c\u6d41"})]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"resource_check"}),(0,i.jsx)(r.td,{children:"String"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsxs)(r.td,{children:["Optional parameters, used to define limited flow policy, see\uff1a",(0,i.jsx)(r.a,{href:"/en/docs/user-guide/execution/overflow",children:"\u8fc7\u8f7d\u4fdd\u62a4"})]})]})]})]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Post parameters"}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"Post parameter is a Json format string, so calling Content-Type parameter in header must be application/json."}),"\n",(0,i.jsx)(r.p,{children:"The specific format of the Post parameter is defined by the triggers."}),"\n",(0,i.jsx)(r.h2,{id:"cancel-trigger-task",children:"Cancel Trigger Task"}),"\n",(0,i.jsx)(r.p,{children:"Used to cancel triggers of the specified type by task ids."}),"\n",(0,i.jsx)(r.h3,{id:"uri-1",children:"URI"}),"\n",(0,i.jsx)(r.p,{children:"/flow/rigger/cancer_rigger.json"}),"\n",(0,i.jsx)(r.h3,{id:"call-method-1",children:"Call Method"}),"\n",(0,i.jsx)(r.p,{children:"POST"}),"\n",(0,i.jsx)(r.h3,{id:"parameter-1",children:"Parameter"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Get Parameters"}),"\n"]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Parameter Name"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Required"}),(0,i.jsx)(r.th,{children:"Parameter Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Type"}),(0,i.jsx)(r.td,{children:"String"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Trigger type, extracted value is kafka (kafka message trigger) or cron (scheduled trigger)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"task_id"}),(0,i.jsx)(r.td,{children:"String"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Trigger task id,kafka triggers are topic#descriptor_id,cron triggers returned to task_id when creating triggers"})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"query-trigger-task-list",children:"Query trigger task list"}),"\n",(0,i.jsx)(r.p,{children:"Used to cancel triggers of the specified type by task ids."}),"\n",(0,i.jsx)(r.h3,{id:"uri-2",children:"URI"}),"\n",(0,i.jsx)(r.p,{children:"/flow/rigger/get_rigger_tasks.json"}),"\n",(0,i.jsx)(r.h3,{id:"call-method-2",children:"Call Method"}),"\n",(0,i.jsx)(r.p,{children:"GET"}),"\n",(0,i.jsx)(r.h3,{id:"parameter-2",children:"Parameter"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Parameter Name"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Required"}),(0,i.jsx)(r.th,{children:"Parameter Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Type"}),(0,i.jsx)(r.td,{children:"String"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Trigger type, extracted value is kafka (kafka message trigger) or cron (scheduled trigger)"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"returns-parameter",children:"Returns parameter"}),"\n",(0,i.jsx)(r.p,{children:"Returns the parameter as a json structure, containing three parameters\uff1a"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Code\uff1aidentification query correct,0\uff1acorrect,-1\uff1aerror;"}),"\n",(0,i.jsx)(r.li,{children:"Message\uff1areturns specific error information when code is not zero;"}),"\n",(0,i.jsx)(r.li,{children:"data\uff1atask details, json format key-value format, see examples."}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"Below is an example of a returned parameter\uff1a"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'LO\n  \t"code": 0,\n  \t"data": Flow\n        "submit_topic#weiboFaasFlowTest:openaiTask": 56\n            "descriptor_id": "RillFlowTest:openaiTask",\n        } } }\n    }\n}\n'})}),"\n",(0,i.jsx)(r.h1,{id:"scheduled-triggers",children:"Scheduled Triggers"}),"\n",(0,i.jsx)(r.p,{children:"Scheduled triggers allow users to set up periodic tasks, with the system automatically initiating workflow submissions at specified intervals."}),"\n",(0,i.jsx)(r.h2,{id:"create-scheduled-trigger-task",children:"Create scheduled trigger task"}),"\n",(0,i.jsxs)(r.p,{children:['By calling the "Create Trigger Task" interface described above, the ',(0,i.jsx)(r.code,{children:"type"})," parameter is given a cron to create the DAG graph on time."]}),"\n",(0,i.jsx)(r.p,{children:'The POST parameter of the "Create Trigger Task" interface must have the following two parameters\uff1a when submitting a scheduled trigger task'}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"cron"}),": The cron expression, e.g., ",(0,i.jsx)(r.code,{children:"0 * * * * *"}),", for executing every minute."]}),"\n",(0,i.jsxs)(r.li,{children:["The context required for ",(0,i.jsx)(r.code,{children:"context"}),"\uff1aDAG to be executed."]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"e.g.\uff1a"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'LO\n  "cron": "0 * * * * **, *",\n  "context": LOS\n    "message": "hello world"\n  } }\n}\n'})}),"\n",(0,i.jsxs)(r.p,{children:["After creating a trigger, you will return information in json format, such as ",(0,i.jsx)(r.code,{children:'{"code": 0, "data": {"task_id": 1}'})]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"code"}),"\uff1afor successful calls, 0\uff1asuccessful, not 0\uff1afailed."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"task_id"}),"\uff1athe id of the scheduled triggering task is used to manage scheduled triggers."]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"canceling-scheduled-trigger-tasks",children:"Canceling Scheduled Trigger Tasks"}),"\n",(0,i.jsxs)(r.p,{children:["Rill Flow returns the ",(0,i.jsx)(r.code,{children:"task_id"})," parameter after submitting a scheduled trigger, and the system will automatically submit the workflow according to the periodicity defined in the ",(0,i.jsx)(r.code,{children:"cron"})," statement."]}),"\n",(0,i.jsxs)(r.p,{children:["Cancel the scheduled trigger task by calling the ",(0,i.jsx)(r.code,{children:"task_id"})," parameter and the ",(0,i.jsx)(r.code,{children:"type"}),": cron parameter to cancel the trigger task interface."]}),"\n",(0,i.jsxs)(r.p,{children:["Interface returns parameter\uff1ajson format, ",(0,i.jsx)(r.code,{children:'{"code":0, "data":{"task_id": 1, "result": true}}}'})]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"code"}),": Indicates success (0) or failure (non-zero)."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"task_id"}),": The ID of the scheduled trigger task to be canceled."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"result"}),": Whether the task was successfully canceled."]}),"\n"]}),"\n",(0,i.jsx)(r.h1,{id:"kafka-triggers",children:"Kafka Triggers"}),"\n",(0,i.jsx)(r.p,{children:"kafka Trigger supports kafka messages to trigger workflow submissions."}),"\n",(0,i.jsx)(r.h2,{id:"create-kafka-trigger-task",children:"Create kafka Trigger Task"}),"\n",(0,i.jsxs)(r.p,{children:['By calling the "Create Trigger Task" interface described above, the ',(0,i.jsx)(r.code,{children:"type"})," parameter is a kafka that creates the kafka message that specifies the DAG graph triggers the task."]}),"\n",(0,i.jsx)(r.p,{children:'When a kafka triggers a task, the POST parameter of the "Create Trigger Task" interface must have kafka_server, group_id, topic parameter to describe the listener of consumer, e.g.\uff1a'}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'LO\n  "kafka_server": "127.0.0.1:9200",\n  "group_id": "rill-flow-group",\n  "topic": "submit_topic"\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"kafka-trigger-task-execution",children:"kafka Trigger Task Execution"}),"\n",(0,i.jsx)(r.p,{children:"After the creation of kafka triggers task has been successfully executed, the consumer starts listening to the given topic, and when there is a message in the top, it will automatically trigger the execution of the DAG graph with the message as a context message to be executed by the DAG in conjunction with such information as descriptor_id that was passed when the triggers were created."}),"\n",(0,i.jsx)(r.p,{children:"Message to kafka must be a json format context message, such as\uff1a"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'LO\n  "message": "hello world"\n}\n'})})]})}function h(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},1151:(e,r,t)=>{t.d(r,{Z:()=>d,a:()=>a});var i=t(7294);const s={},n=i.createContext(s);function a(e){const r=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(n.Provider,{value:r},e.children)}}}]);