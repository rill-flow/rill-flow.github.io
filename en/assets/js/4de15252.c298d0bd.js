"use strict";(self.webpackChunkrill_flow_github_io=self.webpackChunkrill_flow_github_io||[]).push([[7103],{3079:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var s=i(5893),r=i(1151);const t={sidebar_position:3},o="Glossary",l={id:"getting-started/explain",title:"Glossary",description:"Key Term Definitions",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/getting-started/03-explain.md",sourceDirName:"getting-started",slug:"/getting-started/explain",permalink:"/en/docs/getting-started/explain",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/rill-flow/en",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"More examples",permalink:"/en/docs/getting-started/sample"},next:{title:"\u7528\u6237\u6307\u5357",permalink:"/en/docs/category/\u7528\u6237\u6307\u5357"}},a={},d=[{value:"Key Term Definitions",id:"key-term-definitions",level:2},{value:"Rule Examples",id:"rule-examples",level:2},{value:"Generation Rules for Unique Workflow Identifier (<code>descriptor_id</code>)",id:"generation-rules-for-unique-workflow-identifier-descriptor_id",level:3},{value:"Generation Rules for Unique Workflow Execution Identifier (<code>execution_id</code>)",id:"generation-rules-for-unique-workflow-execution-identifier-execution_id",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"glossary",children:"Glossary"}),"\n",(0,s.jsx)(n.h2,{id:"key-term-definitions",children:"Key Term Definitions"}),"\n",(0,s.jsxs)(n.p,{children:["The purpose of this document is to clarify the core terminology used in workflow management.This document aims to clarify the key terms used in workflow management. In our system, a workflow is divided into three levels: business, service, and alias, corresponding to the following interface parameters: ",(0,s.jsx)(n.code,{children:"business_id"}),", ",(0,s.jsx)(n.code,{children:"feature_name"}),", ",(0,s.jsx)(n.code,{children:"alias"}),"."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Business (",(0,s.jsx)(n.code,{children:"business_id"}),")"]}),": The business layer represents different business domains or functional modules and is the highest level in the workflow hierarchy. Each business domain can include multiple services.Each operational area could include multiple services."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Service (",(0,s.jsx)(n.code,{children:"feature_name"}),")"]}),": As a subset of the business layer, the service layer denotes various functions or services under a specific business domain. A business domain can contain multiple services, each providing its unique functionality.There are multiple different services within an area of operation, each providing its unique function."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Alias (",(0,s.jsx)(n.code,{children:"alias"}),")"]}),"\uff1aAliases belong to a subset of the service layer, mainly used to identify different versions or variants of the service.",(0,s.jsxs)(n.strong,{children:["Alias (",(0,s.jsx)(n.code,{children:"alias"}),")"]}),": The alias layer, a subset of the service layer, is used to identify different versions or variants of a service. A service may have multiple aliases, each potentially corresponding to different configurations or usage scenarios."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This hierarchical structure enables flexible management and operation of workflows, allowing detailed configuration and control according to different business requirements."}),"\n",(0,s.jsx)(n.h2,{id:"rule-examples",children:"Rule Examples"}),"\n",(0,s.jsxs)(n.h3,{id:"generation-rules-for-unique-workflow-identifier-descriptor_id",children:["Generation Rules for Unique Workflow Identifier (",(0,s.jsx)(n.code,{children:"descriptor_id"}),")"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Based on MD5 of YAML file"}),":"]}),"\n",(0,s.jsx)(n.p,{children:"Format:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",children:'business_id + ":" + feature_name + ":" + "md5_" + 32-character md5 string generated from the YAML file\n'})}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",children:"DemoFlowTest:DemoTest:md5_4f1707841ad4413fff4afa9d53e526b4\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Based on the process alias"})," (using the latest YAML version under the alias by default):"]}),"\n",(0,s.jsx)(n.p,{children:"Format:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",children:'business_id + ":" + feature_name + ":" + alias\n'})}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",children:"DemoFlowTest:DemoTest:sandbox\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"generation-rules-for-unique-workflow-execution-identifier-execution_id",children:["Generation Rules for Unique Workflow Execution Identifier (",(0,s.jsx)(n.code,{children:"execution_id"}),")"]}),"\n",(0,s.jsx)(n.p,{children:"Format:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",children:'business_id + ":" + feature_name + "_c_" + 36-character UUID generated based on the timestamp\n'})}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",children:"DemoFlowTest:demoTest_c_0c0a9d5e-878b-11ee-9fe1-cfc95b641e41\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>o});var s=i(7294);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);